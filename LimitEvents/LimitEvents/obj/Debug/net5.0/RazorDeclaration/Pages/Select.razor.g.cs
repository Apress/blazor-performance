// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace LimitEvents.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using LimitEvents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using LimitEvents.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using Blazor.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using Blazor.Extensions.Canvas;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using Blazor.Extensions.Canvas.Canvas2D;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\_Imports.razor"
using Blazor.Extensions.Canvas.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\Pages\Select.razor"
using Excubo.Blazor.Canvas;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/select")]
    public partial class Select : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 29 "C:\Code\GitHub\Apress.Videos.Performance\LimitEvents\LimitEvents\Pages\Select.razor"
       

  private ElementReference canvas;
  private ElementReference rope;
  private ElementReference result;

  private int color = 0;

  private string ropeClass = "none";

  protected override void OnInitialized()
  {
    base.OnInitialized();
    this.mouseMove = this.Nope;
  }

  private async Task TrackMouse(MouseEventArgs e)
  {
    await using (var context = await this.js.GetContext2DAsync(canvas))
    {
      await context.BeginPathAsync();
      await context.MoveToAsync(0, 0);
      await context.LineToAsync(e.OffsetX, e.OffsetY);
      await context.StrokeStyleAsync(colors[color]);
      color = (color + 1) % colors.Length;
      await context.StrokeAsync();
      await context.ClosePathAsync();
    }
  }

  private Task Toggle(MouseEventArgs e)
  {
    this.ropeClass = "";
    this.mouseMove = Rope;
    return Task.CompletedTask;
  }

  private Func<MouseEventArgs, Task> mouseMove;

  private Task OnMouseMove(MouseEventArgs e)
    => mouseMove(e);

  private async Task DrawRope(double x, double y, double xx, double yy, bool erase = false)
  {
    await using (var context = await this.js.GetContext2DAsync(rope))
    {
      if (erase)
      {
        await context.ClearRectAsync(0, 0, 700, 500);
      }
      else
      {
        if (x > xx)
        {
          (x, xx) = (xx, x); // swap
        }
        if (y > yy)
        {
          (y, yy) = (yy, y);
        }
        await context.BeginPathAsync();
        await context.StrokeRectAsync(x, y, xx - x, yy - y);
        await context.StrokeStyleAsync("black");
        await context.ClosePathAsync();
      }
    }
  }

  private Task Nope(MouseEventArgs e)
    => Task.CompletedTask;

  private async Task Rope(MouseEventArgs e)
  {
    if (e.Buttons == 0) return;

    await DrawRope(down_x, down_y, up_x, up_y, erase: true);
    up_x = e.OffsetX;
    up_y = e.OffsetY;
    await DrawRope(down_x, down_y, up_x, up_y);
  }

  double down_x, down_y;
  double up_x, up_y;
  double result_width = 700;
  double result_height = 500;

  private async Task OnMouseDown(MouseEventArgs e)
  {
    down_x = up_x = e.OffsetX;
    down_y = up_y = e.OffsetY;
    await DrawRope(down_x, down_y, up_x, up_y);
  }

  private async Task OnMouseUp(MouseEventArgs e)
  {
    up_x = e.OffsetX;
    up_y = e.OffsetY;
    string imageData;

    await using (var context = await this.js.GetContext2DAsync(canvas))
    {
      if (down_x > up_x)
      {
        (down_x, up_x) = (up_x, down_x); // swap
      }
      if (down_y > up_y)
      {
        (down_y, up_y) = (up_y, down_y);
      }
      result_width = up_x - down_x;
      result_height = up_y - down_y;
      imageData = await context.GetImageDataAsync(down_x, down_y, result_width, result_height);
      Console.WriteLine(imageData);
    }
    await using (var context = await this.js.GetContext2DAsync(result))
    {
      await context.ClearRectAsync(0, 0, 700, 500);
      await context.PutImageDataAsync(imageData, 0, 0);
    }
  }

  public async Task Save()
  {
    string dataUrl = await this.js.ToDataURLAsync(result);
    string[] parts = dataUrl.Split(',');
    byte[] bytes = Convert.FromBase64String(parts[1]);
    await FileUtil.SaveAs(js, "HelloWorld.jpg", bytes);
  }

  private string[] colors = new string[]
{
    "blue",
    "blue-violet",
    "auburn",
    "cadet blue",
    "chartreuse",
    "dark goldenrod",
    "dark cyan",
    "dark blue",
    "aqua",
    "crimson",
    "cornflower blue",
    "chocolate",
    "chartreuse",
    "green",
    "dark slate blue",
    "dark sea green",
    "dark orchid",
    "dark orange",
    "dark magenta",
    "dark khaki",
    "dark gray"
                                      };

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.JSInterop.IJSRuntime js { get; set; }
    }
}
#pragma warning restore 1591
